Chef turns infrastructure into code.
Your infr becomes versionable,testable and repeatable as application code.


Chef uses recipes.

Recipes relies on resources. Resources described  a desired state an element in the infrastructure.
	-Package to be installed
	-Files to be created 
	-Directories to be created
	-

Chef relies 

CHef-Enterprize


Common Chef Terms:

Recipes: 
	-Fundamental conf element within an organization.
	-First run list first run

Cookbook:
	-Cookbook made up of recipes.
	-Defines a scenario is the fundam,enta of 
	configuration and policy distribution

Chef-client:	
	-Agent that runs locally on the node that is registered with the chef server.

Convergence:	-	
	-Occurs when chef-client configures the system/node based off the info collected by from the chef-server

Configuration Drift:
	-Occurs when the node state does not reflect the updated state of policies/configurations on the chef server.

Resources:
	-A statement of configuration policy within a recipe 
	Desscribes the desired state of an element in the infrastructure and steps needed to configure.

Provider:
	-Define the steps that are needed to bring the piece of the system from its current state to the desired state.

Attributes:
	-Specific details about the node,used by chef-client to understand current state of the node,the state of the node on the previous chef-client run, and the state of the node at the end of the end of the client run.

Databags:
	-A global variables stored as JSON data and is accessible from the chef server.

knife:
	-Command line tool which provides an interface between the local chef-repo and chef-server.

client.rb:
	-Configuration file for chef-client located at /etc/chef/client.rb on each node.

Ohai:
	-Tool used to detect attributes on a node and then provide attributes to chef-client at the start of every chef-client run.

Environment: 
	-USed to organize environment (Prod/Staging/Dev/QA) generally used with cookbook versions.


	

